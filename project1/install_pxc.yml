---
- hosts: pxc_nodes
  become: true
  vars:
    percona_release_deb: "percona-release_latest.generic_all.deb"
    percona_release_url: "https://repo.percona.com/apt/{{ percona_release_deb }}"
    wsrep_cluster_name: "pxc-cluster"
    cluster_nodes: "11.1.1.245,11.1.1.246,11.1.1.247"

  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install prerequisite packages
      apt:
        name:
          - wget
          - gnupg2
          - lsb-release
          - curl
        state: present

    - name: Download Percona release package
      get_url:
        url: "{{ percona_release_url }}"
        dest: "/tmp/{{ percona_release_deb }}"
        mode: '0644'

    - name: Install Percona release package
      command: dpkg -i /tmp/{{ percona_release_deb }}
      args:
        creates: /usr/bin/percona-release

    - name: Refresh apt cache
      apt:
        update_cache: yes

    - name: Enable Percona repository for PXC 8.0
      command: percona-release setup pxc80
      args:
        creates: /etc/apt/sources.list.d/percona-release.list

    - name: Install Percona XtraDB Cluster
      apt:
        name: percona-xtradb-cluster
        state: present

    - name: Deploy wsrep.cnf template
      template:
        src: templates/wsrep.cnf.j2
        dest: /etc/mysql/mysql.conf.d/mysqld.cnf
        owner: root
        group: root
        mode: '0644'

#- hosts: 11.1.1.245
 # become: true
  #tasks:
    - name: Stop MySQL if running
      service:
        name: mysql
        state: stopped

   # - name: Bootstrap first MySQL node
    #  shell: mysqld --bootstrap --wsrep-new-cluster &
     # args:
      #  creates: /var/lib/mysql/auto.cnf

#- hosts: pxc_nodes:!11.1.1.245
 # become: true
  #vars:
   #     cluster_nodes: "11.1.1.245,11.1.1.246,11.1.1.247"|

   - name: Bootstrap first MySQL node (index 0)
      service:
        name: mysql
        state: started
      when: groups['pxc_nodes'].index(inventory_hostname) == 0
   
    - name: Restart MySQL service on other nodes (index 1+)
      service:
        name: mysql
        state: restarted
      when: groups['pxc_nodes'].index(inventory_hostname) > 0
  
  #tasks:
    #- name: restart MySQL if running
      #service:
        #name: mysql
        #state: restarted

    #- name: Join MySQL node to cluster
     # shell: mysqld --wsrep-cluster-address="gcomm://{{ cluster_nodes }}" &
      #args:
       # creates: /var/lib/mysql/auto.cnf

